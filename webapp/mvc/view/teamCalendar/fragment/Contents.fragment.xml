<core:FragmentDefinition xmlns="sap.m"
  xmlns:core="sap.ui.core"
  xmlns:grid="sap.ui.layout.cssgrid"
  xmlns:custom="sap.ui.tesna.control">
  <Page showHeader="false">
    <VBox class="contents-header">
      <HBox justifyContent="SpaceBetween" class="breadcrumbs">
        <custom:Breadcrumbs />
        <HBox>
          <Button icon="sap-icon://excel-attachment" class="sapUiTinyMarginEnd" text="Excel" press=".onPressExcelDownload" />
          <Button icon="sap-icon://print" text="{i18n>LABEL_00131}" class="sapUiTinyMarginEnd" press=".onPagePrint" />
          <!-- <Button icon="sap-icon://sys-help" text="{i18n>LABEL_00132}" press=".onPressHelp" visible="{= !!${menuModel>/current/showHelp} }" /> -->
        </HBox>
      </HBox>
    </VBox>
    <VBox class="contents" justifyContent="SpaceBetween">
      <HBox class="vCardBox" justifyContent="SpaceBetween" height="80px">
        <HBox class="form-bar" alignItems="Center">
          <Label text="{i18n>LABEL_00220}" visible="{= ${/auth} !== 'E' }" />
          <ComboBox items="{/entry/Persa}" selectedKey="{/searchConditions/Werks}" enabled="{= ${/auth} === 'H' }" visible="{= ${/auth} !== 'E' }" busyIndicatorDelay="0" busy="{/busy/Persa}" change=".onChangeWerks">
            <core:Item key="{Persa}" text="{Pbtxt}" />
          </ComboBox>
          <Label text="{i18n>LABEL_00219}" />
          <ComboBox items="{/entry/Orgeh}" selectedKey="{/searchConditions/Orgeh}" busyIndicatorDelay="0" busy="{/busy/Orgeh}" change=".onChangeOrgeh">
            <core:Item key="{Orgeh}" text="{Fulln}" />
          </ComboBox>
          <Label text="{i18n>LABEL_00177}" />
          <ComboBox items="{/entry/Kostl}" selectedKey="{/searchConditions/Kostl}" busyIndicatorDelay="0" busy="{/busy/Kostl}" change=".onChangeKostl">
            <core:Item key="{Kostl}" text="{Ltext}" />
          </ComboBox>
          <Label text="{i18n>LABEL_00181}" />
          <DatePicker width="250px" displayFormat="yyyy.MM" valueFormat="yyyyMM" value="{/searchConditions/Tyymm}" busyIndicatorDelay="0" busy="{/busy/Tyymm}" />
          <CheckBox text="{i18n>LABEL_00159}" selected="{ path: '/searchConditions/Downinc', type: 'sap.ui.tesna.mvc.model.type.Boolean' }" visible="{= ${/auth} !== 'E' }" busyIndicatorDelay="0" busy="{/busy/Orgeh}" />
          <Button text="{i18n>LABEL_00100}" icon="/sap/public/bc/ui2/zui5_tesnahr/images/icon_search03.png" iconDensityAware="false" busyIndicatorDelay="0" busy="{/busy/Button}" press=".onPressSearch"/>
        </HBox>
      </HBox>
      <VBox width="100%" class="vCardBox small">
        <HBox class="table-toolbar">
          <HBox class="title">
            <Title level="H2" text="Team Calendar" class="sapUiSmallMarginEnd" />
            <Text text="{i18n>MSG_03001}" class="desc-txt ml-0" visible="{= ${/auth} !== 'E' }" />
          </HBox>
        </HBox>
        <HBox justifyContent="Center" class="year-plan-head">
          <Button icon="sap-icon://navigation-left-arrow" press=".onPressPrevYear" class="icon-button" enabled="{= !${/busy/Calendar} }" />
          <Title level="H2" text="{/calendar/yearMonth}" />
          <Button icon="sap-icon://navigation-right-arrow" press=".onPressNextYear" class="icon-button" enabled="{= !${/busy/Calendar} }" />
        </HBox>
        <HBox class="table-search-extension">
          <Input value="{/filter/ename}" placeholder="{i18n>LABEL_02019}" width="200px" maxSuggestionWidth="500px" showSuggestion="true" showTableSuggestionValueHelp="false" suggestionRows="{ path:'/filter/employees', templateShareable: false }" suggestionItemSelected=".onSelectSuggest" submit=".onSubmitSuggest">
            <suggestionColumns>
              <core:Fragment fragmentName="sap.ui.tesna.fragment.SuggestionColumnTemplate" type="XML" />
            </suggestionColumns>
            <suggestionRows>
              <core:Fragment fragmentName="sap.ui.tesna.fragment.SuggestionRowTemplate" type="XML" />
            </suggestionRows>
          </Input>
        </HBox>
        <grid:CSSGrid class="year-plan-grid fixed-grid-header" gridTemplateColumns="{/calendar/columnTemplate}" gridGap="1px" items="{path: '/calendar/plans'}" busyIndicatorDelay="0" busy="{/busy/Calendar}">
          <custom:DayBox width="100%" press=".onPressDayBox">
            <custom:customData>
              <core:CustomData key="pernr" value="{Pernr}" />
              <core:CustomData key="empno" value="{empno}" />
              <core:CustomData key="moveToIndi" value="{moveToIndi}" />
              <core:CustomData key="day" value="{day}" />
              <core:CustomData key="align" value="{align}" writeToDom="true" />
              <core:CustomData key="style" value="{classNames}" writeToDom="true" />
              <core:CustomData key="border" value="{borderNames}" writeToDom="true" />
              <core:CustomData key="gubun" value="{gubun}" writeToDom="true" />
            </custom:customData>
            <Image src="{photo}" mode="Background" class="members-photo" visible="{= !!${photo} }" error=".loadErrorAvatarImage">
              <layoutData>
                <FlexItemData minHeight="30px" maxHeight="30px" />
              </layoutData>
            </Image>
            <Text width="100%" text="{label}" visible="{= !!${photo} }" class="active-link" />
            <Text width="100%" text="{label}" visible="{= !${photo} }">
              <layoutData>
                <FlexItemData growFactor="1" />
              </layoutData>
              <customData>
                <core:CustomData key="day" value="{day}" />
                <core:CustomData key="stripes" value="{stripes}" writeToDom="true" />
                <core:CustomData key="holiday" value="{holiday}" writeToDom="true" />
              </customData>
            </Text>
          </custom:DayBox>
        </grid:CSSGrid>
        <HBox class="box style-02 status-wrap year-plan bottom-fixed sapUiTinyMarginTop" items="{/typeLegends}">
          <Text text="{Coltytx}">
            <customData>
              <core:CustomData key="style" value="{Colty}" writeToDom="true" />
            </customData>
          </Text>
        </HBox>
      </VBox>
    </VBox>
  </Page>
</core:FragmentDefinition>